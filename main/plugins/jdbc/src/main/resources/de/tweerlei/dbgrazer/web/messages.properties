# Help texts for ConfigKeys
help_dbgrazer.auth.jdbc.linkName = Connection name to use for JDBC user authentication
help_dbgrazer.auth.jdbc.query = SQL query to execute for JDBC user authentication

# de.tweerlei.dbgrazer.core.model.ConnectionType
JDBC = JDBC

# de.tweerlei.dbgrazer.core.query.ResultType
SINGLE = single value
ROW = single row
LIST = single column
MAP = two columns (key, value)
MULTIPLE = multiple rows
GROUPED = grouped by first column
EDITABLE = editable filter
CUBE = multi dimensional
SPLIT = split into separate columns
TRANSPOSED = transposed
DRILLDOWN = drill down
SCRIPT = script
TOLERANT_SCRIPT = script (fault-tolerant)
TEST_SCRIPT = script (no commit)
DML = DML
DML_KEY = INSERT returning generated key values
CUSTOM = custom query
EDITOR = Record editor (multiple rows)
ROW_EDITOR = Record editor (single row)
GROUPED_EDITOR = Record editor (grouped)
ID_TREE = Tree by row ID
GROUPED_ID_TREE = Tree by row ID (grouped)
COLUMN_TREE = Tree by column contents
GROUPED_COLUMN_TREE = Tree by column contents (grouped)
FUNCTION = Stored function call
PROCEDURE = Stored procedure call
PIVOT = pivot table
REPORT = Report

# Help texts for de.tweerlei.dbgrazer.core.query.ResultType
help_SINGLE = Only the first column of the first row will be shown.
help_ROW = Only the first row will be shown as key/value pairs.
help_LIST = The first columns of all rows will be concatenated to a single value.
help_MAP = The first two column of each row will be shown as key/value pairs.
help_MULTIPLE = The result will be shown as a table.
help_GROUPED = The result will be split into multiple results using the first column as key.\n\
	The results will be shown as tables. Links will refer to columns starting at 2.
help_EDITABLE = The result will be shown as a table with a form to filter or aggregate selected columns.
help_CUBE = Aggregates results in multiple dimensions.
help_SPLIT = The result will be split into multiple results with 2 columns each.\n\
	The first column for each result is copied from the original first column.\n\
	The second column for each result is copied from column 2, 3 etc.
help_TRANSPOSED = The result will be shown as a table with transposed rows/columns.
help_DRILLDOWN = The result will be shown as a table.\n\
	Linked queries will be shown on the same page.
help_SCRIPT = Statements will be executed in a single transaction.
help_TOLERANT_SCRIPT = Statements will be executed in a single transaction.
help_TEST_SCRIPT = Statements will be executed in a single transaction.
help_DML = INSERT, UPDATE or DELETE
help_CUSTOM = Custom query
help_EDITOR = Editor for records from an SQL table
help_ROW_EDITOR = Editor for records from an SQL table
help_GROUPED_EDITOR = Editor for records from an SQL table
help_ID_TREE = The first column is interpreted as row ID and the second column as ID of the parent row
help_GROUPED_ID_TREE = The first column is interpreted as row ID and the second column as ID of the parent row
help_COLUMN_TREE = Tree levels are built from column contents of the first columns that contain duplicate values
help_GROUPED_COLUMN_TREE = Tree levels are built from column contents of the first columns that contain duplicate values
help_FUNCTION = Calls a stored function, e.g. using JDBC syntax: { ? = call FunctionName(?, ?, ?) }\n\
	The return type must be specified as first query parameter.
help_PROCEDURE = Calls a stored procedure, e.g. using JDBC syntax: { call ProcedureName(?, ?, ?) }
help_PIVOT = The first column is interpreted as row ID, the second column as column ID. The values from the third column are then placed into the pivot table.\n\
	The row and column ID should be unique. In case of duplicates, a value in a later row will overwrite a previous value. 
help_REPORT = Query that returns many rows or takes a long time to execute.\n\
	Will show the row count only and actual results are returned as Download.
